/* --------- colors --------- */
/* --------- adjustment --------- */
html
{
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
}
*
{
    -webkit-box-sizing: inherit;
       -moz-box-sizing: inherit;
            box-sizing: inherit;
}
*:before
{
    -webkit-box-sizing: inherit;
       -moz-box-sizing: inherit;
            box-sizing: inherit;
}
*:after
{
    -webkit-box-sizing: inherit;
       -moz-box-sizing: inherit;
            box-sizing: inherit;
}
*:focus
{
    outline: none;
}
ul
{
    margin: 0;
    padding: 0;
}
ul li
{
    left: 0;

    padding: 0;

    list-style: none;
}
p
{
    margin: 0;
    padding: 0;
}
a
{
    cursor: pointer;
    text-decoration: none;
}
html
{
    font-size: 100.01%;

    width: 100%;
    height: 100%;
}
body
{
    font: 13px/1.42 'Open Sans', sans-sherif;

    width: 100%;
    height: 100% !important;

    background: #f3f3f3;

    -webkit-font-smoothing: antialiased;
}
.wrapper
{
    position: relative;

    overflow: hidden;

    min-width: 1190px;
    min-height: 100%;
}
.wrapper:after
{
    display: block;

    content: '';
}
.container
{
    position: relative;

    zoom: 1;

    width: 1170px;
    margin: 0 auto;
}
.container:before,
.container:after
{
    display: table;

    content: '';
}
.container:after
{
    clear: both;
}
.footer,
.wrapper:after
{
    height: 150px;
}
.footer
{
    position: relative;

    min-width: 1190px;
    margin-top: -150px;

    background: #76c7c0;
}
.footer
{
    font-family: 'Open Sans', sans-serif;
    font-weight: 700;

    background: -webkit-linear-gradient(right, #fb3e38 0%, #ff8f30 100%);
    background:    -moz-linear-gradient(right, #fb3e38 0%, #ff8f30 100%);
    background:      -o-linear-gradient(right, #fb3e38 0%, #ff8f30 100%);
    background:     -ms-linear-gradient(right, #fb3e38 0%, #ff8f30 100%);
    background:         linear-gradient(to left, #fb3e38 0%, #ff8f30 100%);
}
.footer__text
{
    font-family: 'Open Sans', sans-serif;
    font-size: 14px;
    font-weight: 600;
    font-style: italic;

    text-align: center;

    color: #777;
}
.friends__list
{
    zoom: 1;
}
.friends__list:before,
.friends__list:after
{
    display: table;

    content: '';
}
.friends__list:after
{
    clear: both;
}
.friends__item
{
    float: left;

    width: 20%;
    min-height: 180px;
    margin-bottom: 20px;
}
.friends__name
{
    font-family: 'Open Sans', sans-serif;
    font-size: 15px;
    font-weight: 700;

    text-align: center;
}
.avatar
{
    overflow: hidden;

    width: 100px;
    height: 100px;
    margin: 0 auto;

    border: 4px solid transparent;
    border-radius: 50% 50%;
}
.avatar:hover
{
    border-color: #ffc960;
}
.avatar__img
{
    width: 100%;
}
.friends__city
{
    text-align: center;
}
.friends__country
{
    font-family: 'Open Sans', sans-serif;
    font-weight: 600;

    text-align: center;
}
.header
{
    margin-bottom: 20px;
    padding-top: 20px;
    padding-bottom: 20px;

    background: -webkit-linear-gradient(left, #fb3e38 0%, #ff8f30 100%);
    background:    -moz-linear-gradient(left, #fb3e38 0%, #ff8f30 100%);
    background:      -o-linear-gradient(left, #fb3e38 0%, #ff8f30 100%);
    background:     -ms-linear-gradient(left, #fb3e38 0%, #ff8f30 100%);
    background:         linear-gradient(to right, #fb3e38 0%, #ff8f30 100%);
}
.header__top
{
    zoom: 1;
}
.header__top:before,
.header__top:after
{
    display: table;

    content: '';
}
.header__top:after
{
    clear: both;
}
.logo
{
    float: left;

    margin-right: 220px;
}
.logo__img
{
    display: block;

    max-width: 210px;
}
.logo__text
{
    position: absolute;
    top: 0;
    left: -9999px;
}
.head
{
    text-align: center;
}
.head h1
{
    font-weight: normal;

    float: left;

    margin-top: 0;

    color: #ececec;
}
.divider
{
    overflow: hidden;

    text-align: center;
}
.divider__text
{
    font-family: 'Open Sans', sans-serif;
    font-size: 16px;
    font-weight: 600;
    font-style: italic;

    position: relative;

    display: inline-block;

    padding: 10px;

    color: #ececec;
}
.divider__text::after,
.divider__text::before
{
    position: absolute;
    top: 50%;

    display: block;

    width: 2000px;
    height: 1px;
    margin-top: -1px;

    content: '';

    background: #ececec;
}
.divider__text::after
{
    right: 100%;
}
.divider__text::before
{
    left: 100%;
}
.nav__list
{
    /* Opera Presto */
    font-size: 1px;
    line-height: 0;

    text-align: justify;
    /* IE6-7 */
}
.nav__list::after
{
    display: inline-block;
    visibility: hidden;
    overflow: hidden;

    width: 100%;
    height: 0;

    content: '';
}
.nav__item
{
    font-size: 14px;
    /* Восстанавливаем обнулённые свойства */
    line-height: normal;

    display: inline-block;
    /* Opera Presto */
    display: inline-block;

    text-align: left;
    vertical-align: top;
}
.nav__link
{
    display: block;
}
.nav__link:hover .nav__icon svg *
{
    fill: #ffc960;
}
.nav__link:hover .nav__title
{
    color: #ffc960;
}
.nav__icon,
.nav__title
{
    display: inline-block;
    display: inline-block;

    vertical-align: middle;
}
.nav__icon
{
    width: 48px;
    height: 48px;
}
svg *
{
    fill: #ececec;
}
svg
{
    width: 100%;
    height: 100%;
}
.nav__title
{
    font-size: 18px;

    text-transform: uppercase;

    color: #ececec;
}
.post__item
{
    width: 50%;
    margin: 0 auto;
    margin-bottom: 20px;

    border: 1px solid #ffc960;
    border-radius: 8px;
    background: #ececec;
}
.post__date
{
    text-align: center;
}
.post__date-num
{
    font-weight: normal;

    margin-bottom: 0;
}
.post__text
{
    margin-right: 20px;
    margin-bottom: 20px;
    margin-left: 20px;
}
.post__photo
{
    position: relative;

    width: 400px;
    height: 400px;
    margin: 0 auto;
    margin-bottom: 20px;
}
.post__image
{
    position: absolute;
    top: 50%;
    left: 50%;

    display: block;

    max-width: 100%;
    max-height: 100%;

    -webkit-transform: translate(-50%, -50%);
       -moz-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
         -o-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
}
.video__list
{
    zoom: 1;
}
.video__list:before,
.video__list:after
{
    display: table;

    content: '';
}
.video__list:after
{
    clear: both;
}
.video__item
{
    float: left;

    width: 20%;
    margin-bottom: 20px;
    padding: 25px;
}
.video__display
{
    margin-bottom: 10px;

    text-align: center;
}
.video__link
{
    display: block;

    width: 130px;
    height: 100px;
    margin: 0 auto;

    text-align: center;
}
.video__image
{
    display: block;

    max-width: 100%;
    max-height: 100%;
}
.video__title
{
    font-weight: normal;

    margin-top: 0;
}
.video__duration
{
    zoom: 1;

    padding: 0 27px 0 27px;
}
.video__duration:before,
.video__duration:after
{
    display: table;

    content: '';
}
.video__duration:after
{
    clear: both;
}
.video__time
{
    float: left;

    height: 15px;

    text-align: center;
}
.video__date
{
    float: right;

    height: 15px;

    text-align: center;
}
.video__date-num,
.video__time-dur,
.video__views-text
{
    font-weight: normal;

    margin-top: 0;
    margin-bottom: 0;
}
.video__views-text
{
    text-align: center;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
